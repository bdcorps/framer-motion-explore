import { Box, chakra, Container, shouldForwardProp } from "@chakra-ui/react";
import { Inter } from "@next/font/google";
import { isValidMotionProp, motion, Variants } from "framer-motion";
import Head from "next/head";

const inter = Inter({ subsets: ["latin"] });

const ChakraBox = chakra(motion.div, {
  /**
   * Allow motion props and non-Chakra props to be forwarded.
   */
  shouldForwardProp: (prop) =>
    isValidMotionProp(prop) || shouldForwardProp(prop),
});

const Loading = () => {
  return (
    <ChakraBox
      animate={{
        rotate: [0, 90, 180, 270, 360],
      }}
      // @ts-ignore no problem in operation, although type error appears.
      transition={{
        duration: 2.6,
        repeat: Infinity,
        repeatType: "loop",
      }}
      padding="2"
      bgGradient="linear(to-l, #5000FF, #5000FF)"
      display="flex"
      justifyContent="center"
      alignItems="center"
      width="100px"
      height="100px"
    ></ChakraBox>
  );
};

const cardVariants: Variants = {
  offscreen: {
    y: 160,
    opacity: 0,
  },
  onscreen: {
    y: 50,
    opacity: 1,
    transition: {
      delay: 0.3,
      type: "spring",
      bounce: 0.4,
      duration: 0.8,
    },
  },
};

const AnimateOnScroll = () => {
  const background = `linear-gradient(306deg, #1a365d 100%, #153e75 100%)`;

  return (
    <Box h="500px">
      <ChakraBox
        className="card-container"
        initial="offscreen"
        whileInView="onscreen"
        viewport={{ once: true, amount: 0.8 }}
        variants={cardVariants}
      >
        <ChakraBox className="card">
          <Box w="100px" h="100px" backgroundColor="brand.900"></Box>
        </ChakraBox>
      </ChakraBox>
    </Box>
  );
};

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        {/* <Loading /> */}
        <Box>
          <AnimateOnScroll />
          <AnimateOnScroll />
          <AnimateOnScroll />
          <AnimateOnScroll />
          <AnimateOnScroll />
          <AnimateOnScroll />
        </Box>
      </Container>
    </>
  );
}
